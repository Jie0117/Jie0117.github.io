<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leetcodes on </title>
    <link>https://jie0117.github.io/leetcode/</link>
    <description>Recent content in Leetcodes on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 09 Mar 2024 17:46:52 +0800</lastBuildDate>
    <atom:link href="https://jie0117.github.io/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>948. Bag of Tokens</title>
      <link>https://jie0117.github.io/leetcode/l948/</link>
      <pubDate>Sat, 09 Mar 2024 17:46:52 +0800</pubDate>
      <guid>https://jie0117.github.io/leetcode/l948/</guid>
      <description>題目敘述 由於原題目敘述不好理解，這裡用自己易理解的方式陳述。給予一個陣列，陣列包含購買一個積分(score)所需要的(能量)power，目標是求max_score。 我們可以做的事情有兩件&#xA;(1)使用1score換取陣列中所標示的power&#xA;token[i]=500 before after score 1 0 power 0 500 (2)使用power換取1score&#xA;token[i]=500 before after score 0 1 power 500 0 想法 先對陣列進行升序排序，簡化後續操作 使用雙指針head和tail分別指向最小和最大的代幣值 當前power足夠時,從head指針處獲取score, score加1 當前power不足時,如果score大於0,則從tail指針處出售1score, 獲取power 重複3和4,直到無法獲取或出售score為止 返回在此過程中獲得的最高分數 最終只需將整個陣列遍歷一次就可得出結果 code int bagOfTokensScore(vector&amp;lt;int&amp;gt;&amp;amp; tokens, int power) { sort(tokens.begin(), tokens.end()); int score = 0; int maxScore = 0; int head = 0; int tail = tokens.size() - 1; while (head &amp;lt;= tail) { if (power &amp;gt;= tokens[head]) { power -= tokens[head++]; score++; maxScore = max(maxScore, score); } else if (score &amp;gt; 0) { power += tokens[tail--]; score--; } else { break; } } return maxScore; } </description>
    </item>
    <item>
      <title>19.Remove Nth Node From End of List</title>
      <link>https://jie0117.github.io/leetcode/leetcode_19/</link>
      <pubDate>Sun, 03 Mar 2024 16:15:55 +0800</pubDate>
      <guid>https://jie0117.github.io/leetcode/leetcode_19/</guid>
      <description>題目敘述 Given the head of a linked list, remove the nth node from the end of the list and return its head.&#xA;string convert(string s, int numRows);&#xA;測試資料 Example 1: Input: head = [1,2,3,4,5], n = 2 Output: [1,2,3,5]&#xA;Example 2: Input: head = [1], n = 1 Output: []&#xA;Example 3: Input: head = [1,2], n = 1 Output: [1]&#xA;限制條件 The number of nodes in the list is sz.</description>
    </item>
    <item>
      <title>6.Zigzag Conversion</title>
      <link>https://jie0117.github.io/leetcode/leetcode_6_zigzag_conversion/</link>
      <pubDate>Sat, 02 Mar 2024 17:05:55 +0800</pubDate>
      <guid>https://jie0117.github.io/leetcode/leetcode_6_zigzag_conversion/</guid>
      <description>題目敘述 字串 &amp;quot;PAYPALISHIRING&amp;quot; 按照給定的行數以鋸齒形模式編寫，就像這樣： （為了更好的可讀性，你可以這樣閱讀）&#xA;P A H N A P L S I I G Y I R&#xA;之後依照行順序讀取: &amp;quot;PAHNAPLSIIGYIR&amp;quot;&#xA;函數總共會有兩個參數字串s跟整數numRows&#xA;string convert(string s, int numRows);&#xA;測試資料 Example 1:&#xA;Input: s = &amp;ldquo;PAYPALISHIRING&amp;rdquo;, numRows = 3 Output: &amp;ldquo;PAHNAPLSIIGYIR&amp;rdquo;&#xA;Example 2:&#xA;Input: s = &amp;ldquo;PAYPALISHIRING&amp;rdquo;, numRows = 4 Output: &amp;ldquo;PINALSIGYAHRPI&amp;rdquo; Explanation: P I N A L S I G Y A H R P I&#xA;Example 3:&#xA;Input: s = &amp;ldquo;A&amp;rdquo;, numRows = 1 Output: &amp;ldquo;A&amp;rdquo;</description>
    </item>
  </channel>
</rss>
